#################################
#       MACROS BOKEPA 3D        #
#################################

[gcode_macro G80]
gcode:
    M117 Bed leveling
    BED_MESH_CALIBRATE
    G1 X5 Y5 Z0.4 F4000
    M117
    M400

[gcode_macro G81]
gcode:
 BED_MESH_OUTPUT
 
[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0


[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z20 F600 # move up 20 mm
    G90
    G1 X125 Y0 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking
    
# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)

[gcode_macro LOW_TEMP_CHECK]
gcode: 
    {% set T = params.T|default(220)|float %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M118 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}

# load filament
[gcode_macro M701]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E45 F6000  # length till cold-end (~45mm) 
    G1 E20 F200  # some extra to prime the nozzle --> slower
    G1 E20 F200  # some extra to prime the nozzle --> slower 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament

# unload filament
[gcode_macro M702]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 # park
    M117 Unloading Filament 
    LOW_TEMP_CHECK
    G91 # set relative
    G1 E10 F100 
    G92 E0.0
    G1 E-50 F6000 
    G1 E-20 F3000 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

# filament change 
[gcode_macro M600]
gcode:
    M117 Filament Change
    M118 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE
    LOW_TEMP_CHECK
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    M702 # unload

    RESTORE_GCODE_STATE NAME=filament_change

#   M117 New filament
#   M118 New filament
#   COUNTDOWN TIME=25 MSG="Switch"
#   M701 # load
#   COUNTDOWN TIME=10 MSG="Clean"
#   RESUME
#   M117 Resuming
#   M118 Resuming

#   M117 Printing..
#   M118 Printing..
#   UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

#[gcode_macro COUNTDOWN]
#gcode: 
#    {% set MSG = params.MSG|default("Time: ")|string %}
#    {% set TIME = params.TIME|default(10)|int %}
#    # countdown 
#    {% for s in range(TIME|int, 0, -1) %}
#        # dwell 1 second
#        G4 P1000
#        # echo
#        M117 {params.MSG} {s}s
#        M118 {params.MSG} {s}s
#    {% endfor %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    M125 # park
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  SDCARD_RESET_FILE
  # Raise nozzle by 60mm
  G1 Z60 F3000
  G90
  # Disable steppers
  M84

[gcode_macro PREHEAT_PLA]
gcode:
    # Start bed heating
    M140 S60
    # Start nozzle heating
    M104 S200

[gcode_macro PREHEAT_PETG]
gcode:
    # Start bed heating
    M140 S90
    # Start nozzle heating
    M104 S240

[gcode_macro PREHEAT_TPU]
gcode:
    # Start bed heating
    M140 S50
    # Start nozzle heating
    M104 S190

[gcode_macro PURGE]
gcode:
    M83
    G1 E50.0 F250
    G90
    M400


[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    M117 CALENTANDO CAMA...
    M190 S{BED_TEMP} ; wait for bed temperature
    G90 ;Use absolute coordinates
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    
    M117 HOMING...    
    G28 ; Home
    LEVEL_BED_ADVANCED MAX_AGE=5 ; probe mesh eventually
    
    G1 X5 Y5 F3000
    G1 Z10 F200
    
    M117 CALENTANDO HOTEND...
    M109 S{EXTRUDER_TEMP} ; start heating extruder
     
    M117 LIMPIANDO EXTRUSOR...
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F3000
    # Move to start position
    G1 X2.1 Y20 Z0.28 F5000.0
    # Draw the first line
    G1 X2.1 Y200.0 Z0.28 F1500.0 E15
    # Move to side a little
    G1 X2.4 Y200.0 Z0.28 F5000.0
    # Draw the second line
    G1 X2.4 Y20 Z0.28 F1500.0 E30
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F3000
    
    # Print message on LCD
    M117 IMPRIMIENDO...
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    
[gcode_macro END_PRINT]
variable_machine_depth: 200
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    # Absolute positionning
    G90
    # Present print
    G1 X5 Y{machine_depth}
    # Disable steppers
    M84
    # Print message on LCD
    M117 IMPRESION FINALIZADA
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    # Tone finish 1UP
    M300 S1138 P150
    M300 S1567 P150
    M300 S2637 P150
    M300 S2093 P150
    M300 S2349 P150
    M300 S3135 P150
    # SAVE_CONFIG if a mesh was probed in START_PRINT
    SAVE_IF_SET  

[gcode_macro LEVEL_BED_ADVANCED]
description: Levels the bed if the last leveling was MAX_AGE runs ago. Force leveling by setting FORCE
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(5)|int %}
  {% set force_level = params.FORCE|default(0)|int %}
  {% set save = params.SAVE|default(0)|int %}

  ; load level_age from stored variables
  {% set svv = printer.save_variables.variables %}
  {% if "level_age" not in svv %} ; first run
    SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
    {% set level_age = 1 %}
  {% else %} ; load level_age and increment
    {% set level_age = svv.level_age %}
    SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
  {% endif %}
  {action_respond_info("Bed mesh age is " + level_age|string) + "."} 

  ; Level eventually
  {% if force_level or (level_age >= max_age|int) %}
    {action_respond_info("Bed mesh exceeded max age. Leveling...")} 

    ; homing if not homed yet
    {% if 'xy' not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
  
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE
    {% if save %}
      SAVE_VARIABLE VARIABLE=level_age VALUE=1 ; reset counter
      SAVE_CONFIG
    {% else %}
      SET_GCODE_VARIABLE MACRO=LEVEL_BED_ADVANCED VARIABLE=save_at_end VALUE=1
    {% endif %}
  {% else %}
    {action_respond_info("Loading old bed mesh.")} 
    BED_MESH_PROFILE LOAD=default
  {% endif %} 

# runs SAVE_CONFIG if the g-code variable was set in start gcode
[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro LEVEL_BED_ADVANCED"].save_at_end == 1 %}
  {action_respond_info("Saving was requested - saving and restarting now.")}
  SAVE_VARIABLE VARIABLE=level_age VALUE=1
  SAVE_CONFIG
  {% endif %}



[gcode_macro M900] 
gcode:
    {% set K = params.K|default(0)|float %}
    SET_PRESSURE_ADVANCE ADVANCE={K}
    
